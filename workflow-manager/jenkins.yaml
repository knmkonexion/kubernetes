apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins-master
spec:
  selector:
    matchLabels:
      app: jenkins
  replicas: 1
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - name: jenkins
        image: knmkonexion/jenkins:latest
        env:
        - name: JAVA_OPTS
          value: -Xmx2048m -Djenkins.install.runSetupWizard=false
        - name: JENKINS_OPTS
          value: --prefix=/jenkins
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 50000
          protocol: TCP
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
        - mountPath: /opt/kube_configs
          name: kube-configs
        - mountPath: /var/run/docker.sock
          name: docker-sock
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsUser: 0
      serviceAccountName: jenkins
      volumes:
      - name: jenkins-home
        hostPath:
          path: /cluster_datastore/jenkins_home
      - name: kube-configs
        hostPath:
          path: /cluster_datastore/kube_configs
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: jenkins
  labels:
    app: jenkins-master
spec:
  type: ClusterIP
  ports:
    - name: jenkins
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: agents
      port: 50000
      protocol: TCP
  selector:
    app: jenkins
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins
  namespace: jenkins
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - http:
      paths:
      - path: /jenkins
        pathType: Prefix
        backend:
          service:
            name: jenkins
            port:
              number: 8080